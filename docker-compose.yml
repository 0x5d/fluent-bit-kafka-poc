x-common-env: &cenv
  common: &common
    networks:
      - redpanda_network
  minio: &minio
    <<: *common
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
  redpanda: &redpanda
    <<: *common
    image: docker.redpanda.com/redpandadata/redpanda:v24.3.6
    healthcheck:
      test: curl -f localhost:9644/v1/status/ready
      interval: 1s
      retries: 5
      start_period: 5s

networks:
  redpanda_network:
    driver: bridge

volumes:
  redpanda-0: null
  redpanda-1: null
  redpanda-2: null
  minio:
    driver: local

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - type: bind
        source: ./nginx-logs
        target: /var/log/nginx
        bind:
          create_host_path: true

  fbit:
    <<: *common
    container_name: fbit
    depends_on:
      nginx:
        condition: service_started
      redpanda-0:
        condition: service_healthy
    image: fluent/fluent-bit:latest
    volumes:
      - ./config/fluent-bit.yml:/etc/fluent-bit.yml
      - type: bind
        source: ./nginx-logs
        target: /var/log/nginx
    entrypoint: [ "/fluent-bit/bin/fluent-bit", "-c", "/etc/fluent-bit.yml" ]

  wproc:
    <<: *common
    image: wproc
    build:
      dockerfile: Dockerfile
    container_name: wproc
    depends_on:
      redpanda-0:
        condition: service_healthy
    environment:
      BROKERS: redpanda-0:9092,redpanda-1:9092,redpanda-2:9092
      TOPIC: nginx.access

  connect:
    <<: *common
    depends_on:
      redpanda-0:
        condition: service_healthy
      redpanda-1:
        condition: service_healthy
      redpanda-2:
        condition: service_healthy
      minio:
        condition: service_healthy
    image: docker.redpanda.com/redpandadata/connect
    container_name: connect
    volumes:
      - ./config/connect.yml:/connect.yaml
      - ./config/connect-aws-credentials.toml:/home/connect/.aws/credentials

  minio:
    <<: *minio
    container_name: minio
    ports:
      - "9000:9000" # API port
      - "9001:9001" # Console port
    volumes:
      - minio:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  minio-init:
    <<: *minio
    container_name: minio-init
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - ./scripts/minio-init.sh:/init.sh
    entrypoint: /init.sh

  # https://docs.redpanda.com/redpanda-labs/docker-compose/three-brokers/
  redpanda-0:
    <<: *redpanda
    container_name: redpanda-0
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      - --default-log-level=info
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644

  redpanda-1:
    <<: *redpanda
    container_name: redpanda-1
    depends_on:
      - redpanda-0
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:29092
      - --advertise-kafka-addr internal://redpanda-1:9092,external://localhost:29092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:28082
      - --advertise-pandaproxy-addr internal://redpanda-1:8082,external://localhost:28082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:28081
      - --rpc-addr redpanda-1:33145
      - --advertise-rpc-addr redpanda-1:33145
      - --mode dev-container
      - --smp 1
      - --default-log-level=info
      - --seeds redpanda-0:33145
    volumes:
      - redpanda-1:/var/lib/redpanda/data
    ports:
      - 28081:28081
      - 28082:28082
      - 29092:29092
      - 29644:9644

  redpanda-2:
    <<: *redpanda
    container_name: redpanda-2
    depends_on:
      - redpanda-0
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:39092
      - --advertise-kafka-addr internal://redpanda-2:9092,external://localhost:39092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:38082
      - --advertise-pandaproxy-addr internal://redpanda-2:8082,external://localhost:38082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:38081
      - --rpc-addr redpanda-2:33145
      - --advertise-rpc-addr redpanda-2:33145
      - --mode dev-container
      - --smp 1
      - --default-log-level=info
      - --seeds redpanda-0:33145
    volumes:
      - redpanda-2:/var/lib/redpanda/data
    ports:
      - 38081:38081
      - 38082:38082
      - 39092:39092
      - 39644:9644

  console:
    <<: *common
    depends_on:
      redpanda-0:
        condition: service_healthy
    image: docker.redpanda.com/redpandadata/console:v2.8.4
    container_name: redpanda-console
    volumes:
      - ./config/console-config.yml:/tmp/config.yml
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
    ports:
      - 8000:8080
